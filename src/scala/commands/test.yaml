description: |
  Run `sbt test:test` against the repo. Provides an option to upload coverage report to code climate.
  If using coverage, it's advisable to add `scoverage` to plugins.sbt

parameters:
  project_base:
    description: Where test output gets placed
    type: string
    default: target
  with_coverage:
    description: |
      Enable the use of code-climate for aggreated test coverage analysis
        requires code-climate CC_TEST_REPORTER_ID env variable to be added to the job
        the best place for this is in the project in CircleCI UI
        the code-climate ID is specific to each repo
    type: boolean
    default: true
  path_to_coverage_file:
    description: Where the test coverage report gets created.
    type: string
    default: scala-2.13/coverage-report/cobertura.xml
  sbt_opts:
    description: aggregating the test coverage requires more memory and stack size to be defined
    type: string
    default: "-Xmx1524M -Xms512m -Xss4m"

steps:
  - when:
      condition: << parameters.with_coverage >>
      steps:
        - code-climate/install
        - run: cc-test-reporter before-build
  - run: sbt test:compile
  - when:
      condition: << parameters.with_coverage >>
      steps:
        - run:
            name: Try running tests with coverage
            command: |
              export SBT_OPTS="<<parameters.sbt_opts>>"
              if sbt coverageOn +test coverageOff coverageAggregate
              then
                echo 'export TESTS_STATUS=0' >> $BASH_ENV
              else
                echo 'export TESTS_STATUS=1' >> $BASH_ENV
              fi
  - unless:
      condition: << parameters.with_coverage >>
      steps:
        - run:
            name: Try running tests without coverage
            command: |
              if sbt +test
              then
                echo 'export TESTS_STATUS=0' >> $BASH_ENV
              else
                echo 'export TESTS_STATUS=1' >> $BASH_ENV
              fi
  - when:
      condition: << parameters.with_coverage >>
      steps:
        - code-climate/format_coverage:
            coverage_file: << parameters.project_base >>/<< parameters.path_to_coverage_file >>
            input_type: cobertura
        - code-climate/upload_coverage
        - run:
            name: Save coverage results
            command: |
              mkdir -p coverage-reports
              cp -r "$(find . -type d -name 'scoverage-report' -print)" coverage-reports/
        - store_artifacts:
            path: coverage-reports/scoverage-report
            destination: scoverage-report
        - run:
            name: Clean coverage results
            command: rm -rf coverage-reports

  - run:
      name: Save test results
      command: |
        mkdir -p test-reports
        find . -type f -regex ".*/target/test-reports/.*xml" -exec cp {} test-reports/ \;

  - store_test_results:
      path: test-reports

  - run:
      name: Fail CI in case tests failed
      command: exit ${TESTS_STATUS}
