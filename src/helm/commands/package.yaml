description: |
  Package the helm chart(s).
  You can add multiple chart repos by defining the following environment variable in your context
  CT_CHART_REPOS=repo_name1=repo_url1,repo_name2=repo_url2
parameters:
  chart_test_config:
    description: |
      Path to local config file with settings to be used by Chart Tester
      For example:
        helm-extra-args: --timeout 600
        validate-maintainers: false
    type: string
    default: ".circleci/helmTestConfig.yaml"
  chart_package_path:
    description: The path where packaged charts will be saved (defaults to a local, relative path)
    type: string
    default: ".cr-release-packages"
steps:
  - run:
      shell: /bin/sh
      command: |
        helm init --client-only  || true  # this step is required for helm v2
        helm version -c
        if [ "$CT_CHART_REPOS" ]; then
            for i in $(echo $CT_CHART_REPOS | tr "," " ");
            do
                repo_name=$(echo "$i" | cut -d'=' -f1)
                repo_url=$(echo "$i" | cut -d'=' -f2)
                helm repo add $repo_name $repo_url
            done
        fi
        rm -rf <<parameters.chart_package_path>>; mkdir <<parameters.chart_package_path>>
        ct list-changed --config <<parameters.chart_test_config>> | while IFS= read -r chart ; do
            chart=$(echo $chart | sed 's/.*Skipping...//g')
            if [ "$chart" == "" ]; then
              continue
            fi

            echo "Packaging chart: '$chart'..."
            helm dependency build "$chart"

            # set the version different for incubator
            ver=$(helm inspect chart "$chart" | grep version | cut -d' ' -f2)
            [[ -z $CIRCLE_TAG ]] && BRANCH="$CIRCLE_BRANCH" || BRANCH="$CIRCLE_TAG"
            echo "packaging $chart with version: ${ver}-${BRANCH}"
            helm package "$chart" -u --version "${ver}-${BRANCH}" --destination .cr-release-packages

            echo "'$chart' packaged"
            echo "-----"
        done
        
        if [ "$CIRCLE_BRANCH" == "master" ]; then
          git diff HEAD^ HEAD | grep "helm/.*/Chart.yaml$" | sed -n '3p;6p;9p' | awk '{print $2}' | sed 's/\/Chart.yaml$//' | sed 's/\// /g'
          echo "Packaging chart: '$chart'..."
          helm dependency build "$chart"
          helm package "$chart" --destination <<parameters.chart_package_path>>
          echo "'$chart' packaged"
          echo "-----"
        fi
      name: "[helm] Package"
