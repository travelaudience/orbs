description: >
  This job is to deploy our applications using gitops approach on our TA k8s clusters.
  The job will reflect changes from app repository to releases repository.
  In order to run this job correctly, the releases repository must have the required structure.
  This job interacts with two repositories:
    - the application repository - where your code is
    - the releases repository - the repository that manage the releases
parameters:
  releases_repo_name:
    type: string
    description: |
      Name of repo to apply CD using gitops
  github_token:
    description: |
      Name of environment variable storing your secret github token.
    type: env_var_name
    default: GIT_PUSH_TOKEN
  github_user_email:
    description: |
      Name of environment variable storing your github email
    type: env_var_name
    default: GIT_EMAIL
  github_user_name:
    description: User name to create PR to github-repo.
    type: env_var_name
    default: GIT_USERNAME
  pr_auto_merge:
    default: false
    description: Merge PR automatically.
    type: boolean
  pr_merge_type:
    description: >-
      merge type of `gh pr merge`, available values are (merge|rebase|squash).
      The default is "merge".
    type: enum
    enum:
      - merge
      - rebase
      - squash
    default: squash
  app:
    description: Application name.
    type: string
  release_repo_app_path:
    description: |
      Optional. Path for application artifacts inside releases repo.
      Github repo name by dafault.
    type: string
    default: ""
  docker_image_tag:
    description: |
      Version of the docker image to deploy - we recommend using CIRCLE_BRANCH for regular merges to master
      and CIRCLE_TAG for production releases
    type: string
    default: $CHANGE_NAME
  chart_version:
    description: |
      Optional. Version of the helm release to deploy
    type: string
    default: ""
  chart_dir_override:
    description: |
      Place where the helm chart is located inside the application repository
      Defaulting to searching in 'helm' dir to look for changes.
    type: string
    default: "helm"
  reviewers:
    description: Optional. A comma-separated list (no spaces around the comma) of GitHub handles to request a review from.
    type: string
    default: ""
  executor:
    description: Github executor to use for this job
    type: executor
    # OPTIMISATION: to increase job speed we must use alpine image with git cli installed
    default: default
executor: << parameters.executor >>
steps:
  - checkout
  - install_git_cli
  - get_change_name
  - git_config:
      github_user_name: <<parameters.github_user_name>>
      github_user_email: <<parameters.github_user_email>>
  - run: git clone "https://$<<parameters.github_token>>@github.com/travelaudience/<<parameters.releases_repo_name>>.git"
  - when:
      condition: << parameters.release_repo_app_path >>
      steps:
        - replace_image_tag:
            file_location: <<parameters.releases_repo_name>>/<<parameters.release_repo_app_path>>
            docker_image_tag: "<<parameters.docker_image_tag>>"
        - replace_chart_version:
            file_location: <<parameters.releases_repo_name>>/<<parameters.release_repo_app_path>>
            chart_version: <<parameters.chart_version>>
            chart_dir_override: <<parameters.chart_dir_override>>
  - unless:
      condition: << parameters.release_repo_app_path >>
      steps:
        - replace_image_tag:
            file_location: <<parameters.releases_repo_name>>/<<parameters.app>>
            docker_image_tag: "<<parameters.docker_image_tag>>"
        - replace_chart_version:
            file_location: <<parameters.releases_repo_name>>/<<parameters.app>>
            chart_version: <<parameters.chart_version>>
            chart_dir_override: <<parameters.chart_dir_override>>
  - create_pull_request:
      git_repository_name: <<parameters.releases_repo_name>>
      github_token: <<parameters.github_token>>
      pr_auto_merge: <<parameters.pr_auto_merge>>
      pr_merge_type: <<parameters.pr_merge_type>>
      new_branch_name: <<parameters.app>>-<<parameters.chart_version>>-<<parameters.docker_image_tag>>
      commit_description: "Bump <<parameters.app>> to version <<parameters.chart_version>>|<<parameters.docker_image_tag>>"
      pr_title: "[ReleaseBot] Releasing <<parameters.app>> with version <<parameters.chart_version>>|<<parameters.docker_image_tag>>"
      reviewers: << parameters.reviewers >>
