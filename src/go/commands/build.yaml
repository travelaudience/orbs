description: "Parse go code structure for packages to build."
parameters:
  cgo_value:
    default: "0"
    type: string
  os_value:
    default: "linux"
    type: string
steps:
  - run:
      name: '[go] Build'
      command: |
        ver=$(git describe --tags --always --dirty)
        ld_flags="-X 'main.version=$ver'"

        go list -f {{.ImportPath}}%{{.Name}} ./... | while IFS= read -r import_string ; do
          if [[ $import_string != *"/cmd/"* ]]; then
            continue
          fi

          arr_parts=(${import_string//%/ })
          if [[ ${arr_parts[1],,} != "main" ]]; then
            echo "The expected package is 'main'. Not building: $import_string"
            continue
          fi
          importPath=${arr_parts[0]}
          name="${importPath##*/}"

          echo "Building: $name..."
          CGO_ENABLED=<<parameters.cgo_value>> GOOS=<<parameters.os_value>> go build -ldflags "$ld_flags" -a -o "./bin/$name" "$importPath"
        done
  - run: ls -alh ./bin
  - persist_to_workspace:
      root: ./
      paths:
        - bin/*
